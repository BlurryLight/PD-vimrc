" License: WTFPL


"============================================= basic settings =========================================
"禁止swap file
set noswapfile
" I don't care the f**king vi
set nocompatible
" 强化正则表达式,没有magic，正则表达式近乎无法使用
set magic

" 显示
set number      "行号
set ruler      "行号和列号

" 加大移动距离
set scrolloff=10

" 增强标题显示
set title

" 离开窗口时自动保存，回到窗口时自动更新
au FocusGained,BufEnter * :silent! !
au FocusLost,WinLeave * :silent! w

" 简写信息，并关闭乌干达可怜儿童
set shortmess+=atI

"打开自动探测文件类型和缩进
filetype on
filetype plugin on
filetype indent on

"设置文件编码
" 内部编码
set encoding=utf-8
" 读取文件时候顺序猜测编码
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
" 用于屏幕显示的编码
set termencoding=utf-8


" 自动缩进
set autoindent

" 高亮第80列
set colorcolumn=80

" 自动折行(这个是硬折行)
"set linebreak

" 高亮选中
set hlsearch

" 自动换行
set wrap

" 设置默认进行大小写不敏感查找
set ignorecase
" " 如果有一个大写字母，则切换到大小写敏感查找
set smartcase
"

" 让退格键能正常退格
set backspace=indent,eol,start
" Vim默认左右方向键不会切换到下一行，调一下，让<>,h,l,[,]都可以换行
set whichwrap+=<,>,h,l,[,]


set timeout
set ttimeout " 打开timeout和ttimeout
set timeoutlen=3000 " 自定义的map 3秒视为超时
set ttimeoutlen=100 " 内置的50ms
"============================================= KEYS MAPPING ==================
" 部分快捷键
" leader+p复制粘贴模式
set pastetoggle=<leader>p
" <leader>nu关闭开启数字行号
nnoremap <leader>nu :set nu! nu?<CR>
" Upper U to redo
" nnoremap U <C-r>

" <leader>/关闭搜索高亮
noremap <silent><leader>/ :nohls<CR>

"select all
nnoremap <Leader>a ggVG"
" Shift+H goto head of the line, Shift+L goto end of the line
nnoremap H ^
nnoremap L $

" command mode, ctrl-a to head， ctrl-e to tail
cnoremap <C-a> <Home>
cnoremap <C-e> <End>



" tab替代
set expandtab "tab to spaces
set smarttab  "删除会自动删除等同于tab数量的空格
set shiftround ">>和<<会处理没对齐的情况
" indent
set autoindent smartindent shiftround
set shiftwidth=4
set tabstop=4
set softtabstop=4                " insert mode tab and backspace use 4 spaces

" 移动后再次重新选中
vnoremap < <gv
vnoremap > >gv

" tabpage
" <leader>tb 创建tab
" <leader>tc 关闭tab
nnoremap <leader>tb :tabnew<CR>
inoremap <leader>tb <ESC>:tabnew<CR>
nnoremap <leader>tc :tabclose<CR>

" don't bother me with command history
nnoremap q: :q
nnoremap Q <nop>
nnoremap ; :

" https://gist.github.com/zchee/9c78f91cc5ad771c1f5d
" nnoremap <leader>gc :action GotoClass<CR>
" " 弹出输入框，跳转到指定操作
" nnoremap <leader>ga :action GotoAction<CR>
" 跳转到定义
nnoremap <leader>gd :action GotoDeclaration<CR>
" 跳转到实现
nnoremap <leader>gi :action GotoImplementation<CR>
" 跳转到指定的文件
nnoremap <leader>ff :action GotoFile<CR>
" 跳转到变量的声明
nnoremap <leader>fgs :action GotoSymbol<CR>

nnoremap <leader>fre :action FindInPath<CR>
" 查找使用
nnoremap <leader>fgr :action FindUsages<CR>
"对应普通的ctrl-f功能
nnoremap <leader>frb :action Replace<CR>
" " 显示使用
" nnoremap <Space>su :action ShowUsages<CR>

vnoremap = :action ReformatCode<CR>
nnoremap = :action ReformatCode<CR>
vnoremap <leader>ty "+y

sethandler <C-f> n-i-v:ide
sethandler <C-h> n-i-v:ide
sethandler <C-C> n-i-v:ide
sethandler <C-P> n-i-v:ide
sethandler <C-T> n-i-v:ide
sethandler <C-T> n-i-v:ide
