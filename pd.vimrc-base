" License: WTFPL


"============================================= basic settings =========================================
"禁止swap file
set noswapfile
" I don't care the f**king vi
set nocompatible
" 强化正则表达式,没有magic，正则表达式近乎无法使用
set magic

" 显示
set number      "行号
set ruler      "行号和列号

" 加大移动距离
set scrolloff=10

" 增强标题显示
set title
" after exit vim it set termianl title as Terminal
set titleold=Terminal

" 离开窗口时自动保存，回到窗口时自动更新
if has('unix')
    au FocusGained,BufEnter * :silent! !
    au FocusLost,WinLeave * :silent! w
else
    au CursorHold,CursorHoldI * checktime
    au FocusGained,BufEnter * :checktime
endif
" 简写信息，并关闭乌干达可怜儿童
set shortmess+=atI

"打开自动探测文件类型和缩进
filetype on
filetype plugin on
filetype indent on

"设置文件编码
" 内部编码
set encoding=utf-8
" 读取文件时候顺序猜测编码
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
" 用于屏幕显示的编码
set termencoding=utf-8


" 自动缩进
set autoindent

" 高亮第80列
set colorcolumn=120

" 自动折行(这个是硬折行)
"set linebreak

" 高亮选中
set hlsearch

" 自动换行
set wrap

" 设置默认进行大小写不敏感查找
set ignorecase
" " 如果有一个大写字母，则切换到大小写敏感查找
set smartcase
"

" 让退格键能正常退格
set backspace=indent,eol,start
" Vim默认左右方向键不会切换到下一行，调一下，让<>,h,l,[,]都可以换行
set whichwrap+=<,>,h,l,[,]

" 自动去除部分文件的行尾空格
autocmd FileType c,cpp,java,php autocmd BufWritePre <buffer> %s/\s\+$//e

set timeout
set ttimeout " 打开timeout和ttimeout
set timeoutlen=800 " 自定义的map 800m秒视为超时
set ttimeoutlen=100 " 内置的50ms
"============================================= KEYS MAPPING ==================
" 部分快捷键
" leader+p复制粘贴模式
set pastetoggle=<leader>p
if has('unix')
    vnoremap <leader>Y :w! /tmp/vitmp<CR>                                                                   
    nnoremap <leader>P :r! cat /tmp/vitmp<CR>
    " :W 表示sudo权限强制保存
    command W :execute ':silent w !sudo tee % > /dev/null' | :edit!
endif

" <leader>nu关闭开启数字行号
nnoremap <leader>nu :set nu! nu?<CR>
" Upper U to redo
nnoremap U <C-r>

" <leader>/关闭搜索高亮
noremap <silent><leader>/ :nohls<CR>

" Shift+H goto head of the line, Shift+L goto end of the line
nnoremap H ^
nnoremap L $

" tab替代
set expandtab "tab to spaces
set smarttab  "删除会自动删除等同于tab数量的空格
set shiftround ">>和<<会处理没对齐的情况
" indent
set autoindent smartindent shiftround
set shiftwidth=4
set tabstop=4
set softtabstop=4                " insert mode tab and backspace use 4 spaces

" 移动后再次重新选中
vnoremap < <gv
vnoremap > >gv

" tabpage
" <leader>tb 创建tab
" <leader>tc 关闭tab
nnoremap <leader>tb :tabnew<CR>
inoremap <leader>tb <ESC>:tabnew<CR>
nnoremap <leader>tc :tabclose<CR>

" quickfix move
nnoremap <leader>j  :cn<CR>
nnoremap <leader>k  :cp<CR>

" don't bother me with command history
nnoremap q: :q
nnoremap Q <nop>

"
nnoremap ; :


function! ToggleWindowHorizontalVerticalSplit()
  if !exists('t:splitType')
    let t:splitType = 'vertical'
  endif

  if t:splitType == 'vertical' " is vertical switch to horizontal
    windo wincmd K
    let t:splitType = 'horizontal'

  else " is horizontal switch to vertical
    windo wincmd H
    let t:splitType = 'vertical'
  endif
endfunction

" <leader> windows split
nnoremap <silent> <leader>ws :call ToggleWindowHorizontalVerticalSplit()<cr>
" move current window to new tab
nnoremap <silent> <leader>wt <C-w>T<CR>
if has('gui_win32')
    set guifont=JetBrains\ Mono:h14
endif

autocmd BufNewFile,BufRead *.sh :set filetype=bash
" https://www.jianshu.com/p/65c29ea0a0aa
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q" . "\<Esc>]12;green\x7" 
" 颜色也可以用HEX制RGB，白色是 <Esc>]12;rgb:FF/FF/FF\x7
let &t_te.="\e[0 q"

" 1 -> blinking block  闪烁的方块
" 2 -> solid block  不闪烁的方块
" 3 -> blinking underscore  闪烁的下划线
" 4 -> solid underscore  不闪烁的下划线
" 5 -> blinking vertical bar  闪烁的竖线
" 6 -> solid vertical bar  不闪烁的竖线

if (&term =~ '^xterm' && &t_Co == 256)
   set t_ut= | set ttyscroll=1
endif

colorscheme desert
syntax on

" 使用256位颜色
if exists('+termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      set termguicolors
endif
set t_Co=256

augroup disable_paste
au!
    au InsertLeave * set nopaste
augroup END
