source ~/pd.vimrc-base

if has("mac") && has("unix") && has("arm64")
    let $PATH = expand('$PATH') . ':' . expand('$HOME/.vim/bin/darwin_arm')
elseif has("unix")
    let $PATH = expand('$PATH') . ':' . expand('$HOME/.vim/bin/linux')
endif

if exists('+termguicolors')
command! -nargs=+ -complete=file Rg :call ripgrep#search(<q-args>)
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      set termguicolors
endif
set t_Co=256
colorscheme desert 
" colorscheme morning
syntax on

" completion
packadd! mucomplete
set omnifunc=syntaxcomplete#Complete
set completeopt+=menuone
set completeopt+=noselect
set shortmess+=c   " Shut off completion messages
set belloff+=ctrlg " Add only if Vim beeps during completion
let g:mucomplete#enable_auto_at_startup = 1
inoremap <expr><CR> pumvisible() ? "\<C-Y>" : "\<CR>"

" tagbar
packadd! tagbar 
nnoremap <leader>tt :TagbarToggle<CR>

" ctrlp
packadd! ctrlp

" comment
packadd! commentary
nmap <leader>cc <plug>Commentary

" search
packadd! vim-ripgrep
let g:rg_highlight=1

" linter
packadd! vim-ale
let g:ale_virtualtext_cursor = 'disabled'
let g:ale_enabled = 0
" use ale toggle to open it

" easyalign
packadd! vim-easy-align 
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

packadd! vim-surround

packadd! vim-oscyank

packadd! hlsl.vim

vnoremap <leader>ty :OSCYankVisual<CR>
set laststatus=2
set noshowmode
packadd! lightline.vim

augroup CmakeSettings
    autocmd!
    autocmd BufNewFile,BufRead CmakeLists.txt set filetype=cmake
    if filereadable(expand("$HOME/.vim/template/CMakeLists.txt.tpl"))
        autocmd BufNewFile CMakeLists.txt 0r $HOME/.vim/template/CMakeLists.txt.tpl
    endif
augroup END
set dictionary+=$HOME/.vim/dict/american-english
let g:mucomplete#chains = {
	    \ 'default' : ['path', 'omni', 'keyn', 'uspl'],
	    \ 'glsl' : ['path', 'omni', 'keyn', 'uspl', 'tags'],
	    \ 'hlsl' : ['path', 'omni', 'keyn', 'uspl', 'tags'],
	    \ 'vim'     : ['path', 'cmd', 'keyn']
	    \ }

"================Auto Update Ctags Begin
if v:version < 800
    echo "Vim 8+ is required for async ctags update"
    finish
endif
augroup AutoUpdateCtags
    autocmd!
    autocmd BufWritePost *.c,*.cpp,*.h,*.hlsl,*.glsl call AsyncUpdateCtags()
augroup END

" 异步执行 Ctags
function! AsyncUpdateCtags()
    if !executable("ctags")
        echohl WarningMsg | echom "Ctags not found!" | echohl None
        return
    endif

    let l:root = exists('*FindProjectRoot') ? FindProjectRoot() : getcwd()

    " Ctags 命令
    let l:ctags_cmd = ["ctags", "-R", "-f", l:root . "/.ctags", l:root]

    call system(join(l:ctags_cmd, " "))
    echom "Ctags updating in " . l:root
endfunction


"================Auto Update Ctags End
